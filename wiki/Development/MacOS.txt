[Wiki Home](Home)
<br>[Developer Notes](Development-Developer%20Notes)

====== VLC Installation for development:

Start the VLC installer, drag the VLC installation to
$HOME/Applications.  Rename to VLC3.app and VLC4.app.

====== Setting up MacOS

VNC:

https://apple.stackexchange.com/questions/339114/allowing-vnc-to-control-computer-under-10-14-mojave

<br>Open : system preferences / security & privacy / privacy / accessibility
<br>Using the finder :
<br>Drag this file : /System/Library/CoreServices/RemoteManagement/
<br>      AppleVNCServer.bundle/Contents/MacOS/AppleVNCServer
<br>The bundle has to be opened with a right-click, show package contents.
<br>Drag this file also: sshd-keygen-wrapper

<br>Older Mac OS X: login screen picture:
<br>/Library/Caches/com.apple.desktop.admin.png
<br>Mojave: replace:
<br>/Library/Desktop Pictures/Mojave.heic (really a .png)

<br>Sharing:
<br> Turn on screen sharing and remote login.
<br> Change computer name.
<br> screen sharing: set VNC password
<br> For both screen sharing and remote login, make sure the allowed users
<br>and groups are correct.
<br> For each user:
<br> Right click on user, advanced options, change directory to point
to /Volumes/Users (Mojave and prior currently have symlinks).
Need an extra admin account to change other accounts.
<br> Users:
<br> login options : change to name and password.

Add terminal with full disk access:
<br>Security & Privacy / Privacy / Full Disk Access : turn on terminal.

Add user to _developer group:
<br>sudo dscl . append /Groups/_developer GroupMembership <username>

/etc/paths:
<br>/opt/local/bin

/etc/postfix/main.cf:
<br>default_transport = smtp:localhost:8025

scutil --set HostName bll-mac.ballroomdj.org

# to reset the keychain password
<br>security set-keychain-password

# run this first to get all the bdj4 requirements installed
<br>$HOME/bdj4/install/macos-pre-install-macports.sh

sudo port install autossh di rlwrap                   # for bll
<br>sudo port install check cmake pkgconfig sshpass   # for bdj4.
<br>sudo port uninstall gtk3
<br>sudo port install gtk3-devel

  To boot into safe mode:
<br>    Hold down the Shift key.
<br>  To select a partition to boot:
<br>    Hold down the Alt key.
<br>  To restart to access disk utility, etc:
<br>    Hold down Meta-R.
<br>  To clear PRAM/NVRAM:
<br>    Hold down Meta-Alt-P-R.
<br>  To restart to restore from the internet:
<br>    Alt-D

====== MacOS GUI (Cocoa AppKit)

In progress.

Constraints (alignment, fill):

Constraints are difficult to use, as the constraints require the
widgets to be packed, and require that the neighboring widgets exist.
This is not a good design for dynamic layouts.

Since the constraints require the widgets to be packed, all of the
size-group, margin, etc. changes must be moved after the pack
statement.  This is not a big issue.  Many are done already.

One possiblity is to keep track of the previous widget packed into the
stack-view (separate start and end), then constraints can be set up
with the current and the previous widget.  Not sure how to handle
centered and fill objects though.

I am wondering how these contraints work when a button is hidden.

Notebook:

Having the notebook put the tabs on the left doesn't work well.  MacOS
configures the tabs with vertical text, rather than horizontal text.

Need to re-work this to use a nstabviewcontroller so that the tabs can
be formatted better.  Also need nstabviewcontroller to get the images
into the tabs. Will need to set Tab-Style-Unspecified and create my
own buttons.

I also have the weird placement of 'set queue for playback' button.
With gtk this button is forced into the notebook view.  If I write my
own tab handler, I can place this without any issue.  There are a
couple of options here.  (a) I can re-work the gui so that the button
placement is different, though that gets back to the original problem
of where to put it. (b) Since I'm going to have to write my own tab
handling for macos, placement will be easy.  But this doesn't solve
the issue for other guis in the future.

Fonts:

There doesn't seem to be any easy way to change the font for all
widgets.  I think the system-font size can be set, so that's one
option.  May need to set the font individually for every widget.

Text Spinbox:

I think, again, I will need to write my own.  This can be copied from
the GTK style.  The native GTK version can be replaced, as their
callbacks are complicated.

Solved issues:

Size groups: Set the trailing-anchor constraint to match all other
widgets in the size group.  Widgets must be packed before setting the
size group.

Pack End: This works by using add-view at-index within the trailing
gravity group to match what gtk does.

Margins: Could not find a good way to do this.  Ended up wrapping all
widgets in an NSView, which is not the recommended way.  The layout
guides seemed to need constraints, and constraints are hard to use due
to being relative to the neighbors and requiring all neighbors to be
packed.

[Developer Notes](Development-Developer%20Notes)
<br>[Wiki Home](Home)
<br>_(Updated 2024-08-27 09:20:09; BDJ4 version 4.11.6)_
