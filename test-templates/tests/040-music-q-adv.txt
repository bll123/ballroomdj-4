
section 40 Music-Queue-Adv

test 40-10 Clear-Queue
get main CHK_MAIN_MUSICQ
chk mq0len 0
get player CHK_PLAYER_STATUS
chk prepqueuecount 0
msg main MUSICQ_INSERT 0~999~2
msg main MUSICQ_INSERT 0~999~4
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~8
msg main MUSICQ_INSERT 0~999~10
msg main MUSICQ_INSERT 0~999~12
msg main MUSICQ_INSERT 0~999~14
get main CHK_MAIN_MUSICQ
chk mq0len 7
get player CHK_PLAYER_STATUS
chk prepqueuecount 5
# queue_clear clears the playlist and the music q
# it does not clear the currently playing song
msg main QUEUE_CLEAR
get main CHK_MAIN_MUSICQ
chk mq0len 1
get player CHK_PLAYER_STATUS
chk prepqueuecount 1
end

test 40-12 Truncate-Queue
get main CHK_MAIN_MUSICQ
chk mq0len 0
get player CHK_PLAYER_STATUS
chk prepqueuecount 0
msg main MUSICQ_INSERT 0~999~2
msg main MUSICQ_INSERT 0~999~4
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~8
msg main MUSICQ_INSERT 0~999~10
msg main MUSICQ_INSERT 0~999~12
msg main MUSICQ_INSERT 0~999~14
get main CHK_MAIN_MUSICQ
chk mq0len 7
get player CHK_PLAYER_STATUS
chk prepqueuecount 5
# musicq_truncate clears the playlist queue and the music q
# it does not clear the currently playing song
msg main MUSICQ_TRUNCATE 0~1
get main CHK_MAIN_MUSICQ
chk mq0len 1
get player CHK_PLAYER_STATUS
chk prepqueuecount 1
msg main MUSICQ_INSERT 0~999~2
msg main MUSICQ_INSERT 0~999~4
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~8
msg main MUSICQ_INSERT 0~999~10
msg main MUSICQ_INSERT 0~999~12
msg main MUSICQ_INSERT 0~999~14
get main CHK_MAIN_MUSICQ
chk mq0len 8
get player CHK_PLAYER_STATUS
chk prepqueuecount 5
msg main MUSICQ_TRUNCATE 0~4
get main CHK_MAIN_MUSICQ
chk mq0len 4
get player CHK_PLAYER_STATUS
chk prepqueuecount 4
end

# if play-when-queued is on:
# on an insert the player should only start playing if the queue is empty.
test 40-14 Play-When-Queued-Insert
msg main QUEUE_PLAY_WHEN_QUEUED 1
msg main MUSICQ_INSERT 0~999~1
# should auto-start playing
mssleep 1000
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate playing
# now pause; an additional insert should not start playing
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate paused
msg main MUSICQ_INSERT 0~999~3
get player CHK_PLAYER_STATUS
chk playstate paused
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate playing
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 7000
wait playstate playing
mssleep 1000
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 7000
wait playstate stopped
# the queue is now empty; an insert should start playing
msg main MUSICQ_INSERT 0~999~5
get player CHK_PLAYER_STATUS
resptimeout 1000
wait playstate playing
end

# The queue-clear-play message
#   is used by the management ui to play a selected song.
# => play-when-queued must be true.
# The queue-clear-play message acts upon
# a) an empty queue
# b) a queue where the song is playing
# c) a queue where the song is paused
# It may not work on a queue where a song is loaded and is stopped.
# (this could be fixed someday).
test 40-16 Clear-Play
msg main QUEUE_PLAY_WHEN_QUEUED 1
get main CHK_MAIN_MUSICQ
chk mq0len 0
get player CHK_PLAYER_STATUS
chk prepqueuecount 0
# empty queue
msg main QUEUE_CLEAR_PLAY 0~999~16
mssleep 1000
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mq0len 1
get player CHK_PLAYER_STATUS
chk prepqueuecount 0 playstate playing
# playing song
msg main QUEUE_CLEAR_PLAY 0~999~18
mssleep 1000
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mq0len 1
get player CHK_PLAYER_STATUS
chk prepqueuecount 0 playstate playing
# paused song
msg main CMD_PLAYPAUSE
msg main QUEUE_CLEAR_PLAY 0~999~20
mssleep 1000
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mq0len 1
get player CHK_PLAYER_STATUS
chk prepqueuecount 0 playstate playing
end

test 40-20 Remove
get main CHK_MAIN_MUSICQ
chk mq0len 0
get player CHK_PLAYER_STATUS
chk prepqueuecount 0
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~5
msg main MUSICQ_INSERT 0~999~7
msg main MUSICQ_INSERT 0~999~9
msg main MUSICQ_INSERT 0~999~11
msg main MUSICQ_INSERT 0~999~13
msg main MUSICQ_INSERT 0~999~15
get main CHK_MAIN_MUSICQ
chk mq0len 7
get player CHK_PLAYER_STATUS
chk prepqueuecount 5
msg main MUSICQ_REMOVE 0~3
get main CHK_MAIN_MUSICQ
chk mq0len 6
get player CHK_PLAYER_STATUS
chk prepqueuecount 5
msg main MUSICQ_REMOVE 0~2
get main CHK_MAIN_MUSICQ
chk mq0len 5
get player CHK_PLAYER_STATUS
chk prepqueuecount 5
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mq0len 4
get player CHK_PLAYER_STATUS
chk prepqueuecount 4
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mq0len 3
get player CHK_PLAYER_STATUS
chk prepqueuecount 3
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mq0len 2
get player CHK_PLAYER_STATUS
chk prepqueuecount 2
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mq0len 1
get player CHK_PLAYER_STATUS
chk prepqueuecount 1
end

test 40-30 Toggle-Pause
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~5
msg main MUSICQ_INSERT 0~999~7
msg main MUSICQ_INSERT 0~999~9
msg main MUSICQ_INSERT 0~999~11
msg main MUSICQ_INSERT 0~999~13
msg main MUSICQ_INSERT 0~999~15
msg main CMD_PLAY
mssleep 1000
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate playing
msg main MUSICQ_TOGGLE_PAUSE 0~1
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 1000
wait pauseatend 0 playstate in-fadeout
resptimeout 7000
wait playstate playing
mssleep 1000
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 1000
wait pauseatend 1 playstate in-fadeout
resptimeout 7000
wait playstate stopped
msg main MUSICQ_TOGGLE_PAUSE 0~2
msg main CMD_PLAY
mssleep 1000
get player CHK_PLAYER_STATUS
resptimeout 1000
wait playstate playing
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 1000
wait pauseatend 0 playstate in-fadeout
resptimeout 7000
wait playstate playing
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 1000
wait pauseatend 0 playstate in-fadeout
resptimeout 7000
wait playstate playing
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 1000
wait pauseatend 1 playstate in-fadeout
resptimeout 7000
wait playstate stopped
end

