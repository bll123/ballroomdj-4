# 2022-9-13
#
# test songs are all between 29 and 32 seconds long
# fade-out default: 4000
# gap default: 2000
#
# 32+ seconds + 2 = 34, so a timeout of 35 seconds is used if
# playing the entire song.
#
# commands:
#   section test msg get chk wait mssleep
#   resptimeout
#     set the response timeout for 'wait'
#   reset end
#     ends the test
#   disp
#     display responses before using 'chk' or 'wait'
#
# main:
#   status:
#     mqmanage mqplay mqmlen mqplen dbidx m-songfn title dance
# player:
#   status:
#     playstate
#       unknown stopped loading playing paused in-fadeout in-gap
#     plistate
#       none opening buffering playing paused stopped ended error
#         note that these may be specific to vlc.
#         the only states that should be used in tests
#         are playing and paused.
#     currvolume realvolume speed playtimeplayed
#     pauseatend repeat defaultsink currentsink
#   song:
#     p-duration p-songfn
#

# Section 0 is special.  It is always run for all sections and all tests.
section 0 Init

test 0-1 Init
msg main QUEUE_PLAY_ON_ADD 0
msg main QUEUE_SWITCH_EMPTY 0
msg main MUSICQ_SET_MANAGE 0
msg main MUSICQ_SET_PLAYBACK 0
reset

section 1 Basic

test 1-1 Insert-Play
get main CHK_MAIN_MUSICQ
chk mqplen 0
msg main MUSICQ_INSERT 0~999~0
get main CHK_MAIN_MUSICQ
chk mqplen 1
msg main CMD_PLAY
mssleep 500
get main CHK_MAIN_MUSICQ
get player CHK_PLAYER_STATUS
chk mqplen 1 dbidx 0 playstate playing
mssleep 2000
get player CHK_PLAYER_STATUS
chk playstate playing
resptimeout 35000
get player CHK_PLAYER_STATUS
wait playstate in-fadeout
resptimeout 5000
wait playstate in-gap
wait playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
mssleep 3000
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
end

test 1-2 Insert-Play-2
get main CHK_MAIN_MUSICQ
chk mqplen 0
msg main MUSICQ_INSERT 0~999~1
get main CHK_MAIN_MUSICQ
chk mqplen 1
msg main CMD_PLAY
mssleep 500
get main CHK_MAIN_MUSICQ
get player CHK_PLAYER_STATUS
chk mqplen 1 dbidx 1 playstate playing
mssleep 2000
msg main MUSICQ_INSERT 0~999~2
get main CHK_MAIN_MUSICQ
get player CHK_PLAYER_STATUS
chk mqplen 2 dbidx 1 playstate playing
resptimeout 35000
get player CHK_PLAYER_STATUS
wait playstate in-fadeout
resptimeout 5000
wait playstate in-gap
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 2
get player CHK_PLAYER_STATUS
resptimeout 35000
wait playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
end

section 2 Controls

# play/pause is needed for testing nextsong and position
test 2-1 PlayPause
msg main MUSICQ_INSERT 0~999~9
msg main CMD_PLAY
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 9
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate paused
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 9
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 9
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate paused
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 9
end

# seek can be used to shorten the time taken for many tests
test 2-2 Position
# test while playing
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~4
get main CHK_MAIN_MUSICQ
chk mqplen 2
msg main CMD_PLAY
mssleep 500
get player CHK_PLAYER_STATUS
wait playstate playing
msg player PLAY_SEEK 25000
get player CHK_PLAYER_STATUS
cgt playtimeplayed 25000
get player CHK_PLAYER_STATUS
clt playtimeplayed 26000
msg player PLAY_SEEK 5000
get player CHK_PLAYER_STATUS
cgt playtimeplayed 5000
get player CHK_PLAYER_STATUS
clt playtimeplayed 6000
msg player PLAY_SEEK 10000
get player CHK_PLAYER_STATUS
cgt playtimeplayed 10000
get player CHK_PLAYER_STATUS
clt playtimeplayed 11000
msg player PLAY_SEEK 0
get player CHK_PLAYER_STATUS
cgt playtimeplayed 0
get player CHK_PLAYER_STATUS
clt playtimeplayed 1000
msg player PLAY_SEEK 28000
resptimeout 4000
get player CHK_PLAYER_STATUS
wait playstate in-fadeout
end

# nextsong can be used to shorten the time taken for many tests
# nextsong is also used internally by the 'end' command
test 2-3 NextSong
# first test when the player is stopped
msg main MUSICQ_INSERT 0~999~5
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~7
msg main MUSICQ_INSERT 0~999~8
get main CHK_MAIN_MUSICQ
chk mqplen 4 qdbidx 5
get player CHK_PLAYER_STATUS
chk playstate stopped
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 3 qdbidx 6
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 2 qdbidx 7
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 8
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
# next test when the player is playing
msg main MUSICQ_INSERT 0~999~5
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~7
msg main MUSICQ_INSERT 0~999~8
msg main CMD_PLAY
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 4 dbidx 5
get player CHK_PLAYER_STATUS
wait playstate playing
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 3 dbidx 6
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 2 dbidx 7
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 8
msg main CMD_NEXTSONG
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
end

section 3 Basic-Bugs

# 2022-9-14 the main player would send the song-play command to the player
# when paused.  Can't seem to duplicate the actual playback w/o going
# through the playerui, but the 'songplaysentcount' tells the story.
test 3-1 Bug-DupPlayback-2022-9-14
msg main CHK_MAIN_RESET
msg main MUSICQ_INSERT 0~999~10
msg main CMD_PLAY
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 10 songplaysentcount 1
mssleep 2000
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate paused
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 10 songplaysentcount 1
mssleep 300
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate playing
get main CHK_MAIN_MUSICQ
# this must be 1.
chk mqplen 1 dbidx 10 songplaysentcount 1
end

