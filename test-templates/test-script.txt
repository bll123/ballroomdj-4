# 2022-9-13
#
# test songs are all between 29 and 32 seconds long
# fade-out default: 4000
# gap default: 2000
#
# 32+ seconds + 2 = 34, so a timeout of 35 seconds is used if
# playing the entire song.
#
# commands:
#   section test msg get chk wait mssleep
#   resptimeout
#     set the response timeout for 'wait'
#   reset end
#     ends the test
#   disp
#     display responses before using 'chk' or 'wait'
#
# main:
#   status:
#     mqmanage mqplay mqmlen mqplen dbidx m-songfn title dance
# player:
#   status:
#     playstate
#       unknown stopped loading playing paused in-fadeout in-gap
#     plistate
#       none opening buffering playing paused stopped ended error
#         note that these may be specific to vlc.
#         the only states that should be used in tests
#         are playing and paused.
#     currvolume realvolume speed playtimeplayed
#     pauseatend repeat defaultsink currentsink
#   song:
#     p-duration p-songfn
#
# sections
#   0 init
#   10 music-queue
#   20 basic-playback
#   30 playback-controls
#   40 basic-bugs
#   60 music-queue-dual
#   70 music-queue-switch
#   90 player-config
#   110 song-list
#   120 sequence
#   130 automatic
#   140 queue-dance
#   150 announcements
#   170 song-controls
#   180 playlist-controls
#   190 song-filter
#

# Section 0 is special.  It is always run for all sections and all tests.
section 0 Init

test 0-10 Init
msg main QUEUE_PLAY_ON_ADD 0
msg main QUEUE_SWITCH_EMPTY 0
msg main MUSICQ_SET_MANAGE 0
msg main MUSICQ_SET_PLAYBACK 0
reset

section 10 Music-Queue

test 10-10 Insert-End
get main CHK_MAIN_MUSICQ
chk mqplen 0
msg main MUSICQ_INSERT 0~999~0
get main CHK_MAIN_MUSICQ
chk mqplen 1 mq0idx0 0
msg main MUSICQ_INSERT 0~999~1
get main CHK_MAIN_MUSICQ
chk mqplen 2 mq0idx0 0 mq0idx1 1
msg main MUSICQ_INSERT 0~999~2
get main CHK_MAIN_MUSICQ
chk mqplen 3 mq0idx0 0 mq0idx1 1 mq0idx2 2
msg main MUSICQ_INSERT 0~999~3
get main CHK_MAIN_MUSICQ
chk mqplen 4 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3
msg main MUSICQ_INSERT 0~999~4
get main CHK_MAIN_MUSICQ
chk mqplen 5 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3 mq0idx4 4
msg main MUSICQ_INSERT 0~999~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3 mq0idx4 4 mq0idx5 5
end

test 10-20 Insert-Begin
get main CHK_MAIN_MUSICQ
chk mqplen 0
msg main MUSICQ_INSERT 0~0~0
get main CHK_MAIN_MUSICQ
chk mqplen 1 mq0idx0 0
msg main MUSICQ_INSERT 0~0~1
get main CHK_MAIN_MUSICQ
chk mqplen 2 mq0idx1 0 mq0idx1 1
msg main MUSICQ_INSERT 0~0~2
get main CHK_MAIN_MUSICQ
chk mqplen 3 mq0idx0 0 mq0idx1 1 mq0idx2 2
msg main MUSICQ_INSERT 0~0~3
get main CHK_MAIN_MUSICQ
chk mqplen 4 mq0idx0 0 mq0idx1 1 mq0idx2 3 mq0idx3 2
msg main MUSICQ_INSERT 0~0~4
get main CHK_MAIN_MUSICQ
chk mqplen 5 mq0idx0 0 mq0idx1 1 mq0idx2 4 mq0idx3 3 mq0idx4 2
msg main MUSICQ_INSERT 0~0~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 5 mq0idx3 4 mq0idx4 3 mq0idx5 2
end

test 10-30 Move-Up
msg main MUSICQ_INSERT 0~999~0
msg main MUSICQ_INSERT 0~999~1
msg main MUSICQ_INSERT 0~999~2
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~4
msg main MUSICQ_INSERT 0~999~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3 mq0idx4 4 mq0idx5 5
msg main MUSICQ_MOVE_UP 0~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3 mq0idx4 5 mq0idx5 4
msg main MUSICQ_MOVE_UP 0~4
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 5 mq0idx4 3 mq0idx5 4
msg main MUSICQ_MOVE_UP 0~3
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 5 mq0idx3 2 mq0idx4 3 mq0idx5 4
msg main MUSICQ_MOVE_UP 0~2
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 5 mq0idx2 1 mq0idx3 2 mq0idx4 3 mq0idx5 4
# a swap is possible as the player is stopped
msg main MUSICQ_MOVE_UP 0~1
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 5 mq0idx1 0 mq0idx2 1 mq0idx3 2 mq0idx4 3 mq0idx5 4
end

test 10-40 Move-Down
msg main MUSICQ_INSERT 0~999~0
msg main MUSICQ_INSERT 0~999~1
msg main MUSICQ_INSERT 0~999~2
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~4
msg main MUSICQ_INSERT 0~999~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3 mq0idx4 4 mq0idx5 5
msg main MUSICQ_MOVE_DOWN 0~1
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 2 mq0idx2 1 mq0idx3 3 mq0idx4 4 mq0idx5 5
msg main MUSICQ_MOVE_DOWN 0~2
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 2 mq0idx2 3 mq0idx3 1 mq0idx4 4 mq0idx5 5
msg main MUSICQ_MOVE_DOWN 0~3
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 2 mq0idx2 3 mq0idx3 4 mq0idx4 1 mq0idx5 5
msg main MUSICQ_MOVE_DOWN 0~4
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 2 mq0idx2 3 mq0idx3 4 mq0idx4 5 mq0idx5 1
end

test 10-50 Move-Top
msg main MUSICQ_INSERT 0~999~0
msg main MUSICQ_INSERT 0~999~1
msg main MUSICQ_INSERT 0~999~2
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~4
msg main MUSICQ_INSERT 0~999~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3 mq0idx4 4 mq0idx5 5
msg main MUSICQ_MOVE_TOP 0~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 5 mq0idx2 1 mq0idx3 2 mq0idx4 3 mq0idx5 4
msg main MUSICQ_MOVE_TOP 0~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 4 mq0idx2 5 mq0idx3 1 mq0idx4 2 mq0idx5 3
msg main MUSICQ_MOVE_TOP 0~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 3 mq0idx2 4 mq0idx3 5 mq0idx4 1 mq0idx5 2
msg main MUSICQ_MOVE_TOP 0~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 2 mq0idx2 3 mq0idx3 4 mq0idx4 5 mq0idx5 1
msg main MUSICQ_MOVE_TOP 0~4
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 5 mq0idx2 2 mq0idx3 3 mq0idx4 4 mq0idx5 1
msg main MUSICQ_MOVE_TOP 0~4
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 4 mq0idx2 5 mq0idx3 2 mq0idx4 3 mq0idx5 1
msg main MUSICQ_MOVE_TOP 0~2
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 5 mq0idx2 4 mq0idx3 2 mq0idx4 3 mq0idx5 1
msg main MUSICQ_MOVE_TOP 0~1
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 5 mq0idx2 4 mq0idx3 2 mq0idx4 3 mq0idx5 1
end

test 10-60 Remove
msg main MUSICQ_INSERT 0~999~0
msg main MUSICQ_INSERT 0~999~1
msg main MUSICQ_INSERT 0~999~2
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~4
msg main MUSICQ_INSERT 0~999~5
get main CHK_MAIN_MUSICQ
chk mqplen 6 mq0idx0 0 mq0idx1 1 mq0idx2 2 mq0idx3 3 mq0idx4 4 mq0idx5 5
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mqplen 5 mq0idx0 0 mq0idx1 2 mq0idx2 3 mq0idx3 4 mq0idx4 5
msg main MUSICQ_REMOVE 0~4
get main CHK_MAIN_MUSICQ
chk mqplen 4 mq0idx0 0 mq0idx1 2 mq0idx2 3 mq0idx3 4
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mqplen 3 mq0idx0 0 mq0idx1 3 mq0idx2 4
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mqplen 2 mq0idx0 0 mq0idx1 4
msg main MUSICQ_REMOVE 0~1
get main CHK_MAIN_MUSICQ
chk mqplen 1 mq0idx0 0
end

section 20 Basic-Playback

test 20-10 Insert-Play
get main CHK_MAIN_MUSICQ
chk mqplen 0
msg main MUSICQ_INSERT 0~999~0
get main CHK_MAIN_MUSICQ
chk mqplen 1
msg main CMD_PLAY
resptimeout 2000
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
get player CHK_PLAYER_STATUS
chk mqplen 1 dbidx 0 playstate playing
mssleep 2000
get player CHK_PLAYER_STATUS
chk playstate playing
resptimeout 35000
get player CHK_PLAYER_STATUS
wait playstate in-fadeout
resptimeout 5000
wait playstate in-gap
wait playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
mssleep 3000
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
end

test 20-20 Insert-Play-2
get main CHK_MAIN_MUSICQ
chk mqplen 0
msg main MUSICQ_INSERT 0~999~1
get main CHK_MAIN_MUSICQ
chk mqplen 1
msg main CMD_PLAY
mssleep 500
get main CHK_MAIN_MUSICQ
get player CHK_PLAYER_STATUS
chk mqplen 1 dbidx 1 playstate playing
mssleep 2000
msg main MUSICQ_INSERT 0~999~2
get main CHK_MAIN_MUSICQ
get player CHK_PLAYER_STATUS
chk mqplen 2 dbidx 1 playstate playing
resptimeout 35000
get player CHK_PLAYER_STATUS
wait playstate in-fadeout
resptimeout 5000
wait playstate in-gap
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 2
get player CHK_PLAYER_STATUS
resptimeout 35000
wait playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
end

section 30 Playback-Controls

test 30-10 Fade
msg main MUSICQ_INSERT 0~999~9
msg main CMD_PLAY
get player CHK_PLAYER_STATUS
resptimeout 1000
wait playstate playing
mssleep 500
msg player PLAY_FADE
resptimeout 5000
get player CHK_PLAYER_STATUS
chk playstate in-fadeout
# a fade during in-fadeout does nothing
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
chk playstate in-fadeout
get player CHK_PLAYER_STATUS
wait playstate in-gap
end

test 30-20 Pause-at-End
msg main MUSICQ_INSERT 0~999~10
msg main CMD_PLAY
resptimeout 1000
get player CHK_PLAYER_STATUS
wait playstate playing
mssleep 500
get player CHK_PLAYER_STATUS
chk pauseatend 0 playstate playing
msg player PLAY_PAUSEATEND
get player CHK_PLAYER_STATUS
chk pauseatend 1 playstate playing
msg player PLAY_PAUSEATEND
get player CHK_PLAYER_STATUS
chk pauseatend 0 playstate playing
msg player PLAY_PAUSEATEND
get player CHK_PLAYER_STATUS
chk pauseatend 1 playstate playing
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
chk pauseatend 1 playstate in-fadeout
get player CHK_PLAYER_STATUS
resptimeout 5000
wait playstate stopped
get player CHK_PLAYER_STATUS
chk pauseatend 0 playstate stopped
end

test 30-30 Play-Pause
msg main MUSICQ_INSERT 0~999~11
msg main CMD_PLAY
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 11
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate paused
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 11
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 11
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate paused
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 11
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 11
# a pause during in-fadeout creates a pause-at-end condition
msg player PLAY_FADE
get player CHK_PLAYER_STATUS
resptimeout 1000
wait playstate in-fadeout
get player CHK_PLAYER_STATUS
chk pauseatend 0 playstate in-fadeout
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk pauseatend 1 playstate in-fadeout
resptimeout 8000
get player CHK_PLAYER_STATUS
wait playstate stopped
end

test 30-40 Position
# test while playing
msg main MUSICQ_INSERT 0~999~3
msg main MUSICQ_INSERT 0~999~4
get main CHK_MAIN_MUSICQ
chk mqplen 2
msg main CMD_PLAY
mssleep 500
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate playing
msg player PLAY_SEEK 25000
get player CHK_PLAYER_STATUS
cgt playtimeplayed 25000
get player CHK_PLAYER_STATUS
clt playtimeplayed 26000
msg player PLAY_SEEK 5000
get player CHK_PLAYER_STATUS
cgt playtimeplayed 5000
get player CHK_PLAYER_STATUS
clt playtimeplayed 6000
msg player PLAY_SEEK 10000
get player CHK_PLAYER_STATUS
cgt playtimeplayed 10000
get player CHK_PLAYER_STATUS
clt playtimeplayed 11000
msg player PLAY_SEEK 0
get player CHK_PLAYER_STATUS
cgt playtimeplayed 0
get player CHK_PLAYER_STATUS
clt playtimeplayed 1000
msg player PLAY_SEEK 28000
resptimeout 4000
get player CHK_PLAYER_STATUS
wait playstate in-fadeout
end

# nextsong is used internally by the 'end' command
test 30-50 Next-Song
# first test when the player is stopped
print player stopped
msg main CHK_MAIN_RESET
msg main MUSICQ_INSERT 0~999~5
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~7
msg main MUSICQ_INSERT 0~999~8
get main CHK_MAIN_MUSICQ
chk mqplen 4 qdbidx 5
get player CHK_PLAYER_STATUS
chk playstate stopped
msg main CMD_NEXTSONG
mssleep 100
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 3 qdbidx 6
msg main CMD_NEXTSONG
mssleep 100
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 2 qdbidx 7
msg main CMD_NEXTSONG
mssleep 100
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 8
msg main CMD_NEXTSONG
mssleep 100
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
# next test when the player is playing
print player playing
msg main CHK_MAIN_RESET
msg main MUSICQ_INSERT 0~999~5
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~7
msg main MUSICQ_INSERT 0~999~8
msg main CMD_PLAY
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 4 dbidx 5
get player CHK_PLAYER_STATUS
chk playstate playing
msg main CMD_NEXTSONG
mssleep 500
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 3 dbidx 6
msg main CMD_NEXTSONG
mssleep 500
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 2 dbidx 7
msg main CMD_NEXTSONG
mssleep 500
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 8
msg main CMD_NEXTSONG
mssleep 500
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
# next test when the player is paused
print player paused
msg main CHK_MAIN_RESET
msg main MUSICQ_INSERT 0~999~5
msg main MUSICQ_INSERT 0~999~6
msg main MUSICQ_INSERT 0~999~7
msg main MUSICQ_INSERT 0~999~8
msg main CMD_PLAY
mssleep 1000
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate paused
get main CHK_MAIN_MUSICQ
chk mqplen 4 qdbidx 5
get player CHK_PLAYER_STATUS
chk playstate paused
msg main CMD_NEXTSONG
mssleep 300
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 3 qdbidx 6
msg main CMD_NEXTSONG
mssleep 300
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 2 qdbidx 7
msg main CMD_NEXTSONG
mssleep 300
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 8
msg main CMD_NEXTSONG
mssleep 300
get player CHK_PLAYER_STATUS
chk playstate stopped
get main CHK_MAIN_MUSICQ
chk mqplen 0
end

test 30-60 Repeat
msg main MUSICQ_INSERT 0~999~12
msg main MUSICQ_INSERT 0~999~13
msg main CMD_PLAY
resptimeout 2000
get player CHK_PLAYER_STATUS
wait playstate playing
get main CHK_MAIN_MUSICQ
chk dbidx 12
mssleep 500
get player CHK_PLAYER_STATUS
chk repeat 0 playstate playing
get main CHK_MAIN_MUSICQ
chk dbidx 12
msg player PLAY_REPEAT
get player CHK_PLAYER_STATUS
chk repeat 1 playstate playing
get main CHK_MAIN_MUSICQ
chk dbidx 12
# same song
msg player PLAY_FADE
resptimeout 8000
get player CHK_PLAYER_STATUS
wait playstate playing
get player CHK_PLAYER_STATUS
chk repeat 1 playstate playing
get main CHK_MAIN_MUSICQ
chk dbidx 12
# next song
msg player PLAY_REPEAT
get player CHK_PLAYER_STATUS
chk repeat 0 playstate playing
get main CHK_MAIN_MUSICQ
chk dbidx 12
msg player PLAY_FADE
resptimeout 8000
get player CHK_PLAYER_STATUS
wait playstate playing
get player CHK_PLAYER_STATUS
chk repeat 0 playstate playing
get main CHK_MAIN_MUSICQ
chk dbidx 13
end

test 30-70 Beginning-of-Song
print TBD
end

test 30-80 Volume
print TBD
end

test 30-90 Speed
print TBD
end

section 40 Basic-Bugs

# 2022-9-14 the main player would send the song-play command to the player
# when paused.  Can't seem to duplicate the actual playback w/o going
# through the playerui, but the 'songplaysentcount' tells the story.
test 40-10 Bug-Dup-Playback-2022-9-14
msg main CHK_MAIN_RESET
msg main MUSICQ_INSERT 0~999~10
msg main CMD_PLAY
get player CHK_PLAYER_STATUS
resptimeout 2000
wait playstate playing
get main CHK_MAIN_MUSICQ
chk mqplen 1 dbidx 10 songplaysentcount 1
mssleep 2000
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate paused
get main CHK_MAIN_MUSICQ
chk mqplen 1 qdbidx 10 songplaysentcount 1
mssleep 300
msg main CMD_PLAYPAUSE
get player CHK_PLAYER_STATUS
chk playstate playing
get main CHK_MAIN_MUSICQ
# this must be 1.
chk mqplen 1 dbidx 10 songplaysentcount 1
end

section 60 Music-Queue-Dual

section 70 Music-Queue-Switch

section 90 Player-Config

test 90-10 Gap
print TBD
end

test 90-20 Fade-In
print TBD
end

test 90-30 Fade-Out
print TBD
end

test 90-40 Maximum-Play-Time
print TBD
end

section 110 Song-List

section 120 Sequence

section 130 Automatic

section 140 Queue-Dance

section 150 Announcements

section 170 Song-Controls

test 170-10 Song-Start
print TBD
end

test 170-20 Song-End
print TBD
end

test 170-30 Volume-Adjustment
print TBD
end

test 170-40 Speed-Adjustment
print TBD
end

section 180 Playlist-Controls

test 180-10 Maximum-Play-Time
print TBD
end

test 180-20 Stop-At
print TBD
end

test 180-30 Stop-After
print TBD
end

test 180-40 Gap
print TBD
end

section 190 Song-Filter

test 190-10 Dance-Filter
print TBD
end

test 190-20 Rating-Filter
print TBD
end

test 190-30 Level-Filter
print TBD
end

test 190-40 Status-Filter
print TBD
end

test 190-50 Favorite-Filter
print TBD
end

test 190-60 Keyword-Filter
print TBD
end

